package a3;import java.util.Iterator;//Stack implementation from p141 of textpublic class ResizingArrayStack<Item> extends Stack<Item>{	private Item[] a = (Item[]) new Object[1];  // stack items	private int N = 0;                          // number of items	public boolean isEmpty()  {  return N == 0; }	public int size()         {  return N;      }	private void resize(int max)	{  // Move stack to a new array of size max.		Item[] temp = (Item[]) new Object[max];		for (int i = 0; i < N; i++)			temp[i] = a[i];		a = temp;	}	public void push(Item item)	{  // Add item to top of stack.		if (N == a.length) resize(2*a.length);		a[N++] = item;	}	public Item pop()	{  // Remove item from top of stack.		Item item = a[--N];		a[N] = null;  // Avoid loitering (see text).		if (N > 0 && N == a.length/4) resize(a.length/2);		return item;	}}